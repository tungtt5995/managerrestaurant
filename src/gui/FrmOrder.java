/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.DAO_Category;
import dao.DAO_HoaDon;
import dao.DAO_HoaDonCT;
import dao.DAO_Menu;
import dao.DAO_Statistical;
import dao.DAO_Table;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Category;
import model.HoaDon;
import model.Menu;
import jdbcHelper.DateHelper;
import jdbcHelper.ShareHelper;
import model.Statistical;
import model.HoaDonCT;
import model.Table;
import sun.misc.FloatingDecimal;

/**
 *
 * @author Admin
 */
public class FrmOrder extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form FrmOrder
     */
    DecimalFormat fomater = new DecimalFormat("###,###,###");
    DAO_Category daoCate = new DAO_Category();
    DAO_Menu daoMenu = new DAO_Menu();
    DAO_HoaDon daoHD = new DAO_HoaDon();
    DAO_HoaDonCT daoDHCT = new DAO_HoaDonCT();
    DAO_Statistical daoSta = new DAO_Statistical();
    DAO_Table daoTable = new DAO_Table();
    ArrayList<Menu> listDSMenu = new ArrayList<>();

    int maLoai;
    int maHD;
    int k = 0;
    int index;
    int maMon;

    public FrmOrder(String ban, String maBan, String maHD, String stt) {
        initComponents();
        setLocationRelativeTo(null);
        loadTypeMenu();
        lblBan.setText(ban);
        lblBan.setToolTipText(maBan);
        lblBanSo.setText(ban);
        lblMaHD.setText(maHD);
        lblTrangThai.setText(stt);
        if (!(lblMaHD.getText() == null)) {
            loadDsHoaDon(Integer.parseInt(maHD));
        }
        checkGiaTriK();

        Thread time = new Thread(this);
        time.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        palLoai = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDsMenu = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        lblBan = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHDCT = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblBanSo = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        lblMaHD = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        lblTienKhTra = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblTienThua = new javax.swing.JLabel();
        txtKhachTra = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        lblSTT = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lblBan1 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        palLoai.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout palLoaiLayout = new javax.swing.GroupLayout(palLoai);
        palLoai.setLayout(palLoaiLayout);
        palLoaiLayout.setHorizontalGroup(
            palLoaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        palLoaiLayout.setVerticalGroup(
            palLoaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(palLoai);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tbDsMenu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbDsMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "TÊN MÓN", "ĐƠN GIÁ"
            }
        ));
        tbDsMenu.setGridColor(new java.awt.Color(255, 255, 255));
        tbDsMenu.setRowHeight(35);
        tbDsMenu.setRowMargin(5);
        tbDsMenu.setSelectionBackground(new java.awt.Color(255, 51, 51));
        tbDsMenu.setShowHorizontalLines(false);
        tbDsMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDsMenuMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbDsMenu);
        if (tbDsMenu.getColumnModel().getColumnCount() > 0) {
            tbDsMenu.getColumnModel().getColumn(0).setPreferredWidth(230);
        }

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 51, 0)));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_search_filled_48px.png"))); // NOI18N

        btnOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_weber_48px.png"))); // NOI18N
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Số lượng");

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)))
                .addGap(28, 28, 28)
                .addComponent(btnOrder)
                .addGap(0, 28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnOrder))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_arrow_pointing_left_48px.png"))); // NOI18N
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblBan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblBan.setText("ban");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tbHDCT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "TÊN MÓN", "SỐ LƯỢNG", "ĐƠN GIÁ", "THÀNH TIỀN"
            }
        ));
        tbHDCT.setGridColor(new java.awt.Color(255, 255, 255));
        tbHDCT.setRowHeight(35);
        tbHDCT.setRowMargin(5);
        tbHDCT.setSelectionBackground(new java.awt.Color(255, 51, 51));
        tbHDCT.setShowHorizontalLines(false);
        tbHDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHDCTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHDCT);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel17.setText("DANH SÁCH CÁC MÓN");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("BÀN: ");

        lblBanSo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBanSo.setText("số bàn");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel28.setText("Mã Hóa đơn");

        lblMaHD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblMaHD.setText("số bàn");

        lblTongTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 0));

        lblTienKhTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTienKhTra.setText("TIỀN KHÁCH ĐƯA");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("TỔNG TIỀN");

        lblTienThua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTienThua.setForeground(new java.awt.Color(255, 0, 0));

        txtKhachTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtKhachTra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKhachTraKeyReleased(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setText("TIỀN THỪA");

        lblSTT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSTT.setForeground(new java.awt.Color(255, 0, 0));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setText("Trạng thái: ");

        lblTrangThai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTrangThai.setText("số bàn");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblBanSo)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMaHD))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTrangThai))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(71, 71, 71)
                                .addComponent(lblTienThua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTienKhTra)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtKhachTra, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(lblSTT, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(lblTrangThai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaHD)
                    .addComponent(jLabel28)
                    .addComponent(lblBanSo)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSTT, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTienKhTra))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTienThua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_update_file_filled_48px.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_delete_48px.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_restart_48px.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnThanhToan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThanhToan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_mastercard_credit_card_48px_1.png"))); // NOI18N
        btnThanhToan.setText("THANH TOÁN");
        btnThanhToan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnThanhToan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThanhToan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThanhToan.setIconTextGap(-5);
        btnThanhToan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnThanhToanMousePressed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_print_48px.png"))); // NOI18N
        jLabel26.setText("IN HÓA ĐƠN");
        jLabel26.setToolTipText("");
        jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel26.setIconTextGap(-5);
        jLabel26.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblBan1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblBan1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_alarm_clock_40px.png"))); // NOI18N

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblBan)
                        .addGap(160, 160, 160)
                        .addComponent(lblBan1)
                        .addGap(16, 16, 16)
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblBan1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblBan)
                                .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel26))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        loadDSMenu();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        insert();

    }//GEN-LAST:event_btnOrderActionPerformed

    private void tbDsMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDsMenuMouseClicked
        int row = tbDsMenu.getSelectedRow();
        if (row >= 0) {
            index = row;
        }
    }//GEN-LAST:event_tbDsMenuMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        update();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        delete();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //clear();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tbHDCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHDCTMouseClicked
        int row = tbHDCT.getSelectedRow();
        if (row >= 0) {
            index = row;
        }
    }//GEN-LAST:event_tbHDCTMouseClicked

    private void btnThanhToanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThanhToanMousePressed
        reset();
    }//GEN-LAST:event_btnThanhToanMousePressed

    private void txtKhachTraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachTraKeyReleased
        double thanhTien = Double.parseDouble(lblTongTien.getToolTipText());
        double tienKhTra = Double.parseDouble(txtKhachTra.getText());
        double tienThua = tienKhTra - thanhTien;
        lblTienThua.setText(fomater.format(tienThua));
    }//GEN-LAST:event_txtKhachTraKeyReleased

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmOrder().setVisible(true);
//            }
//        });
//    }
    public void loadTypeMenu() {
        // Lấy số loại
        ArrayList<Category> list = daoCate.select();
        //Chia layout
        palLoai.setLayout(new GridLayout(list.size(), 1, 5, 5));
        palLoai.removeAll();
        palLoai.updateUI();

        JLabel lbl[] = new JLabel[list.size()];

        for (int i = 0; i < list.size(); i++) {
            lbl[i] = new JLabel(list.get(i).getTenLoai());
            lbl[i].setCursor(new Cursor(Cursor.HAND_CURSOR));
            lbl[i].setPreferredSize(new Dimension(200, 50));
            lbl[i].setHorizontalAlignment(JLabel.CENTER);
            lbl[i].setFont(new Font("Tahoma", Font.PLAIN, 18));
            lbl[i].setToolTipText(Integer.toString(list.get(i).getMaLoai()));
            lbl[i].addMouseListener(new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent e) {
                    System.out.println("Thực hiện khi click vào loại");
                    maLoai = Integer.parseInt(((JLabel) e.getSource()).getToolTipText());
                    System.out.println(maLoai);
                    loadDSMenu();
                }
            });
            palLoai.add(lbl[i]);
        }

    }

    public void loadDSMenu() {
        DefaultTableModel model = (DefaultTableModel) tbDsMenu.getModel();
        model.setRowCount(0);
        try {
            String search = txtSearch.getText();

            if (search.equals("")) {
                listDSMenu = daoMenu.findByMaLoai(maLoai);
            } else {
                listDSMenu = daoMenu.findByTenMon(maLoai, search);
            }

            for (Menu menu : listDSMenu) {
                Object[] row = new Object[]{
                    menu.getTenMon(),
                    fomater.format(menu.getDonGia())
                };
                model.addRow(row);
            }
        } catch (Exception e) {
        }

    }

    public void insert() {

        if (txtSoLuong.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn số lượng");
            return;
        } else {
            if (k == 0) {
                HoaDon model = getModelHD();
                try {
                    daoHD.insert(model);
                    lblTrangThai.setText("Đang phục vụ");

                    // Đoạn bên dưới ta set tooltiptext là mã hóa đơn để khi thêm lần nữa sẽ lấy mã hóa đơn thêm vào hóa đơn chi tiết
                    ArrayList<HoaDon> list = daoHD.select(); // câu select này đã sắp xếp từ cao đến thấp - để ta lấy cái mã hóa đơn vừa thêm
                    maHD = list.get(0).getMaHoaDon();
                    //lblBan.setToolTipText(Integer.toString(maHD));
                    lblMaHD.setText(Integer.toString(maHD));

                    HoaDonCT model1 = getModelHDCT();
                    daoDHCT.insert(model1); // Thêm luôn vào Hóa đơn chi tiết
                    JOptionPane.showMessageDialog(this, "Thêm Hóa Đơn thành công");
                    k = 1;

                    System.out.println("Mã hóa đơn sau khi khách gọi món " + maHD);

                    loadDsHoaDon(maHD);
                    updateSttBan();
                    PalHome.home.loadTable();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Đã có món này");
                    e.printStackTrace();
                }
            } else {
                try {
                    HoaDonCT model1 = getModelHDCT();
                    daoDHCT.insert(model1);

                    ArrayList<HoaDon> list = daoHD.select();
                    Table table = daoTable.findById(Integer.parseInt(lblBan.getToolTipText()));
                    if (table.getTrangThai().trim().equals("Đang phục vụ")) {
                        HoaDon hd = daoHD.findByMaBan(table.getMaBan());
                        maHD = hd.getMaHoaDon();
                        System.out.println("Mã hóa đơn khi bàn đang phục vụ: " + maHD);
                    }
                    //                   maHD = Integer.parseInt(lblMaHD.getText());
//                    else if (table.getTrangThai().trim().equals("Trống")) {
//                        maHD = list.get(0).getMaHoaDon();
//                        System.out.println("Mã hóa đơn khi click vào bàn trộng " + maHD);
//                    } else if (table.getTrangThai().trim().equals("Đã đặt")) {
//                        maHD = list.get(0).getMaHoaDon();
//                    }

                    loadDsHoaDon(maHD);
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Đã có món này");
                    e.printStackTrace();
                }

            }
        }
        System.out.println("giá trị k khi vừa thêm xong " + k);
    }

    public void update() {
        HoaDonCT model = getModelHDCTToUpdate();
        try {
            daoDHCT.update(model);
            loadDsHoaDon(maHD);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void delete() {
        int maHD = Integer.parseInt(lblMaHD.getText());
        ArrayList<Statistical> list = daoSta.showHoaDon(maHD);
        int maMon = list.get(index).getMaMon();
        System.out.println("Mã hóa đơn để xóa " + maHD);
        System.out.println("Mã món để xóa " + maMon);

        try {
            daoDHCT.delete(maHD, maMon);
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            loadDsHoaDon(maHD);
        } catch (Exception e) {
        }
    }

    public HoaDon getModelHD() {
        HoaDon model = new HoaDon();
        model.setMaBan(Integer.parseInt(lblBan.getToolTipText()));
        model.setMaNhanVien(ShareHelper.USER.getMaNV());
        model.setNgayLap(DateHelper.toString(new Date()));
        return model;
    }

    public HoaDonCT getModelHDCT() {
        HoaDonCT model = new HoaDonCT();
        int maMon = listDSMenu.get(index).getMaMon();
        double donGia = listDSMenu.get(index).getDonGia();
        model.setMaHoaDon(Integer.parseInt(lblMaHD.getText()));
        model.setMaMon(maMon);
        System.out.println("Mã món để thêm vào HDCT " + maMon);
        model.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        model.setDonGia(donGia);
        model.setGio(lblTime.getText());
        return model;
    }

    public HoaDonCT getModelHDCTToUpdate() {
        HoaDonCT model = new HoaDonCT();
        ArrayList<Statistical> list = daoSta.showHoaDon(maHD);
        maMon = list.get(index).getMaMon();
        double donGia = list.get(index).getDonGia();
        model.setMaHoaDon(Integer.parseInt(lblMaHD.getText()));
        model.setMaMon(maMon);
        System.out.println("Mã món để thêm vào HDCT " + maMon);
        model.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        model.setDonGia(donGia);
        model.setGio(lblTime.getText());
        return model;
    }

    public Table getModelBan() {
        Table model = new Table();
        model.setMaBan(Integer.parseInt(lblBan.getToolTipText()));
        model.setTenBan(lblBan.getText());
        model.setTrangThai(lblTrangThai.getText());
        return model;
    }

    public void loadDsHoaDon(int maHD) {

        double sum = 0;
        DefaultTableModel model = (DefaultTableModel) tbHDCT.getModel();
        model.setRowCount(0);

        ArrayList<Statistical> list = daoSta.showHoaDon(maHD);
        for (Statistical hdct : list) {
            double thanhTien = hdct.getSoLuong() * hdct.getDonGia();
            Object[] row = new Object[]{
                hdct.getTenMon(),
                hdct.getSoLuong(),
                fomater.format(hdct.getDonGia()),
                fomater.format(thanhTien)
            };
            model.addRow(row);
            sum += thanhTien;
        }
        lblTongTien.setToolTipText(Double.toString(sum));
        lblTongTien.setText(fomater.format(sum));
    }

    public void updateSttBan() {

        Table model = getModelBan();
        try {
            daoTable.update(model);
            PalHome.home.loadTable();
        } catch (Exception e) {
        }
    }

    public void reset() {
        if (checkBeforePay()) {
            lblMaHD.setText("");
            lblSTT.setText("ĐÃ THANH TOÁN " + lblBanSo.getText());
            lblTrangThai.setText("Trống");

            DefaultTableModel model = (DefaultTableModel) tbHDCT.getModel();
            model.setRowCount(0);

            updateSttBan();
        }

    }

    public boolean checkBeforePay() {
        if (txtKhachTra.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tiền khách trả");
            return false;
        }
        double tienKhTra = Double.parseDouble(txtKhachTra.getText());
        double thanhTien = Double.parseDouble(lblTongTien.getToolTipText());
        if (tienKhTra < thanhTien) {
            JOptionPane.showMessageDialog(this, "Tiền khách trả nhỏ hơn tổng tiền hóa đơn");
            return false;
        }

        return true;
    }

    public void checkGiaTriK() {
        if (lblTrangThai.getText().equals("Đang phục vụ")) {
            k = 1;
        } else if (lblTrangThai.getText().equals("Trống")) {
            k = 0;
        } else if (lblTrangThai.getText().equals("Đã đặt")) {
            k = 0;
        }
        System.out.println("giá trị khi khách gọi thêm đồ " + k);
    }

    public void Clock() {
        while (true) {

            Calendar now = Calendar.getInstance();
            SimpleDateFormat fomater = new SimpleDateFormat("HH:mm:ss");
            String time = fomater.format(now.getTime());
            lblTime.setText(time);

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel btnThanhToan;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblBan;
    private javax.swing.JLabel lblBan1;
    private javax.swing.JLabel lblBanSo;
    public javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblSTT;
    private javax.swing.JLabel lblTienKhTra;
    private javax.swing.JLabel lblTienThua;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTongTien;
    public javax.swing.JLabel lblTrangThai;
    private javax.swing.JPanel palLoai;
    private javax.swing.JTable tbDsMenu;
    public static javax.swing.JTable tbHDCT;
    private javax.swing.JTextField txtKhachTra;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        Clock();
    }
}
